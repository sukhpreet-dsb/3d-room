/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 floor.gltf 
Author: Arthur.Zim (https://sketchfab.com/Arthur.Zim)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/seamless-floor-tiled-texture-iv-a2107c49d41544b09659530021aa9cf0
Title: Seamless  floor Tiled Texture IV
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import {
  ExtendedColors,
  Overwrite,
  NodeProps,
  NonFunctionKeys,
  Vector3,
  Euler,
  Matrix4,
  Quaternion,
  Layers,
} from "@react-three/fiber";
import { EventHandlers } from "@react-three/fiber/dist/declarations/src/core/events";
import { JSX } from "react/jsx-runtime";

export default function Model(
  props: JSX.IntrinsicAttributes &
    Omit<
      ExtendedColors<
        Overwrite<
          Partial<THREE.Group<THREE.Object3DEventMap>>,
          NodeProps<THREE.Group<THREE.Object3DEventMap>, typeof THREE.Group>
        >
      >,
      NonFunctionKeys<{
        position?: Vector3;
        up?: Vector3;
        scale?: Vector3;
        rotation?: Euler;
        matrix?: Matrix4;
        quaternion?: Quaternion;
        layers?: Layers;
        dispose?: (() => void) | null;
      }>
    > & {
      position?: Vector3;
      up?: Vector3;
      scale?: Vector3;
      rotation?: Euler;
      matrix?: Matrix4;
      quaternion?: Quaternion;
      layers?: Layers;
      dispose?: (() => void) | null;
    } & EventHandlers
) {
  const { nodes, materials } = useGLTF("/floor/floor.gltf");
  const meshNodes = nodes.Plane_Material_0 as THREE.Mesh;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={meshNodes.geometry}
        material={materials.Material}
        rotation-x={-Math.PI / 2}
        position={[0, -0.5, 0]}
      >
        <planeGeometry args={[10, 10]} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/floor.gltf");

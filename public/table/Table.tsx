/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 table.gltf 
Author: eucocker (https://sketchfab.com/eucocker)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/table-5-2983f936a55a4574b7ca5be8a0bfd021
Title: Table 5
*/

import { useGLTF } from "@react-three/drei";
import {
  ExtendedColors,
  Overwrite,
  NodeProps,
  NonFunctionKeys,
  Vector3,
  Euler,
  Matrix4,
  Quaternion,
  Layers,
} from "@react-three/fiber";
import { EventHandlers } from "@react-three/fiber/dist/declarations/src/core/events";
import { JSX } from "react/jsx-runtime";
import * as THREE from "three";

export default function Model(
  props: JSX.IntrinsicAttributes &
    Omit<
      ExtendedColors<
        Overwrite<
          Partial<THREE.Group<THREE.Object3DEventMap>>,
          NodeProps<THREE.Group<THREE.Object3DEventMap>, typeof THREE.Group>
        >
      >,
      NonFunctionKeys<{
        position?: Vector3;
        up?: Vector3;
        scale?: Vector3;
        rotation?: Euler;
        matrix?: Matrix4;
        quaternion?: Quaternion;
        layers?: Layers;
        dispose?: (() => void) | null;
      }>
    > & {
      position?: Vector3;
      up?: Vector3;
      scale?: Vector3;
      rotation?: Euler;
      matrix?: Matrix4;
      quaternion?: Quaternion;
      layers?: Layers;
      dispose?: (() => void) | null;
    } & EventHandlers
) {
  const { nodes, materials } = useGLTF("/table/table.gltf");
  const meshCube_2__0 = nodes.Cube_2__0 as THREE.Mesh;
  const meshCube_2__0_1 = nodes.Cube_2__0_1 as THREE.Mesh;
  const meshCube_2__0_2 = nodes.Cube_2__0_2 as THREE.Mesh;
  const meshCube_1_2__0 = nodes.Cube_1_2__0 as THREE.Mesh;
  const meshCube_2_2__0 = nodes.Cube_2_2__0 as THREE.Mesh;
  const meshCube_1_3__0 = nodes.Cube_1_3__0 as THREE.Mesh;
  const meshCube__0 = nodes.Cube__0 as THREE.Mesh;
  const meshCube_1__0 = nodes.Cube_1__0 as THREE.Mesh;
  return (
    <group {...props} dispose={null}>
      <group scale={0.004} position={[-2, -0.64, -1.5]} rotation={[0, 4.7, 0]}>
        <group position={[0, 144.397, 358.349]}>
          <group position={[0, -144.397, -358.349]}>
            <group
              position={[-174.264, 373.765, 358.349]}
              rotation={[0, 0, Math.PI]}
            >
              <mesh
                geometry={meshCube_2__0.geometry}
                material={materials["Scene_-_Root"]}
              />
              <mesh
                geometry={meshCube_2__0_1.geometry}
                material={materials["Scene_-_Root"]}
              />
              <mesh
                geometry={meshCube_2__0_2.geometry}
                material={materials["Scene_-_Root"]}
              />
            </group>
          </group>
          <mesh
            geometry={meshCube_1_2__0.geometry}
            material={materials["Scene_-_Root"]}
            position={[0, 221.68, 0]}
          />
          <mesh
            geometry={meshCube_2_2__0.geometry}
            material={materials["Scene_-_Root"]}
            position={[0, -41.044, 0]}
          />
        </group>
        <mesh
          geometry={meshCube_1_3__0.geometry}
          material={materials["Scene_-_Root"]}
          position={[175.042, 366.077, 0]}
          rotation={[0, Math.PI / 2, 0]}
        />
        <mesh
          geometry={meshCube__0.geometry}
          material={materials["Scene_-_Root"]}
          position={[0, 102.977, 0]}
        />
        <mesh
          geometry={meshCube_1__0.geometry}
          material={materials["Scene_-_Root"]}
          position={[0, 403.943, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/table.gltf");

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 walllight.gltf 
Author: Lucas Garnier (https://sketchfab.com/nocyde)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/wall-light-c723fa0a1ac3478790192acdb39161b0
Title: Wall Light
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { ExtendedColors, Overwrite, NodeProps, NonFunctionKeys, Vector3, Euler, Matrix4, Quaternion, Layers } from "@react-three/fiber";
import { EventHandlers } from "@react-three/fiber/dist/declarations/src/core/events";
import { JSX } from "react/jsx-runtime";

export default function Model(props: JSX.IntrinsicAttributes & Omit<ExtendedColors<Overwrite<Partial<THREE.Group<THREE.Object3DEventMap>>, NodeProps<THREE.Group<THREE.Object3DEventMap>, typeof THREE.Group>>>, NonFunctionKeys<{ position?: Vector3; up?: Vector3; scale?: Vector3; rotation?: Euler; matrix?: Matrix4; quaternion?: Quaternion; layers?: Layers; dispose?: (() => void) | null; }>> & { position?: Vector3; up?: Vector3; scale?: Vector3; rotation?: Euler; matrix?: Matrix4; quaternion?: Quaternion; layers?: Layers; dispose?: (() => void) | null; } & EventHandlers) {
  const { nodes, materials } = useGLTF("/wallight/walllight.gltf");
  const meshNodes = nodes.WallLight_lambert1_0 as THREE.Mesh
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={meshNodes.geometry}
        material={materials.lambert1}
        scale={0.02}
        position={[-3.5, 2.5, -5]}
      />
      <ambientLight intensity={0.5} />
      <directionalLight position={[5, 5, 5]} intensity={1} />
    </group>
  );
}

useGLTF.preload("/walllight.gltf");
